[General]
network = project.SimpleNet
sim-time-limit = 100s

# Run simulation without asking for user input
cmdenv-interactive = false
cmdenv-express-mode = true
cmdenv-autoflush = true

# Default settings for all scenarios
**.vector-recording = false
**.scalar-recording = true

# ============ ASSIGN ALL MODULE ADDRESSES ============
# Sender side
**.sender.address = 100
**.mta_Client_S.address = 200
**.mta_Server_S.address = 300
**.spool.address = 400
**.dns1.address = 150
**.dns1.answerAddr = 200  # dns1 resolves to mta_Client_S

# Middle - encrypted communication path
**.mta_Client_SS.address = 500
**.sniffer.address = 550
**.mta_Server_RS.address = 600
**.dns.address = 650

# Receiver side
**.mailbox.address = 700
**.maa_Server.address = 800
**.maa_Client.address = 810
**.maa_Client.receiverAddr = 850
**.receiver.address = 850
**.receiver.dnsAddr = 860
**.dns2.address = 860
**.dns2.answerAddr = 810

# Certificate Authority (must match email.ned)
**.ca.address = 950

# ============ CONFIGURE ROUTER ROUTING TABLES ============
# 
# NETWORK TOPOLOGY OVERVIEW:
# sender(100) ← router1 → dns1(150), mta_Client_S(200)
# mta_Client_S(200) ← direct P2P → mta_Server_S(300) ← direct P2P → spool(400)
# spool(400) ← direct P2P → mta_Client_SS(500) ← direct P2P → sniffer(550)
# sniffer(550) ← router(main) → dns(650), mta_Server_RS(600), CA(950)
# mta_Server_RS(600) ← direct P2P → mailbox(700) ← direct P2P → maa_Server(800)
# maa_Server(800) ← direct P2P → maa_Client(810) ← router2 → dns2(860), receiver(850)
#
# NOTE: Routers are NOT interconnected. Traffic flows through direct P2P chains.
#

# Router1 (left side) connects: sender(gate0), dns1(gate1), mta_Client_S(gate2)
# Router1 handles traffic ONLY for its directly connected nodes
**.router1.routes = "100:0, 150:1, 200:2"

# Main router (center) connects: sniffer(gate0), dns(gate1), mta_Server_RS(gate2), CA(gate3)
# The sniffer connects to mta_Client_SS(500) which chains back to spool(400)→mta_Server_S(300)→mta_Client_S(200)
# The mta_Server_RS(600) chains forward to mailbox(700)→maa_Server(800)→maa_Client(810)
# 
# Gate 0 (sniffer): Reaches 550(sniffer), 500(mta_Client_SS), and backward chain 400, 300, 200
# Gate 1 (dns): Reaches 650(dns)
# Gate 2 (mta_Server_RS): Reaches 600(mta_Server_RS), and forward chain 700, 800, 810
# Gate 3 (CA): Reaches 950(CA)
**.router.routes = "550:0, 500:0, 400:0, 300:0, 200:0, 650:1, 600:2, 700:2, 800:2, 810:2, 950:3"

# Router2 (right side) connects: receiver(gate0), dns2(gate1), maa_Client(gate2)
# Router2 handles traffic ONLY for its directly connected nodes and the chain back through maa_Client
# Gate 0: receiver(850)
# Gate 1: dns2(860)
# Gate 2: maa_Client(810) which chains back to maa_Server(800)→mailbox(700)→mta_Server_RS(600)
**.router2.routes = "850:0, 860:1, 810:2, 800:2, 700:2, 600:2"

# ============ CONFIGURE SENDER EMAIL ============
**.sender.message = "Test email message"
**.sender.mail_from = "alice@sender.com"
**.sender.mail_to = "bob@receiver.com"
**.sender.mail_subject = "Test Email - Security Demonstration"
**.sender.mail_body = "This is a test email to demonstrate the Man-in-the-Middle attack and its prevention using certificates."

#==============================================================================
# SCENARIO 1: Man-in-the-Middle Attack (NO CERTIFICATES)
# This scenario demonstrates the vulnerability of key exchange without authentication
# The sniffer intercepts and substitutes keys successfully
#==============================================================================
[Config Scenario1_MITM_Attack]
description = "MITM Attack Succeeds "

# Disable certificate verification (default behavior)
**.useCertificates = false
**.ca.enabled = false

# Display settings
**.displayString = "b=,,rect"

#==============================================================================
# SCENARIO 2: Certificate-Based Protection (MITM PREVENTED)
# This scenario shows how certificates prevent MITM attacks
# The CA issues certificates, and parties verify them before key exchange
#==============================================================================
[Config Scenario2_With_Certificates]
description = "Certificate Verification Enabled"

# Enable certificate verification
**.useCertificates = true
**.ca.enabled = true

# Certificate validity period (in simulation seconds)
**.ca.certificateValidityPeriod = 3600s

# Display settings
**.displayString = "b=,,rect"
